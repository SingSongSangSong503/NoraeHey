# Generated by Django 4.1.1 on 2022-09-21 02:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Magazine",
            fields=[
                ("megazine_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "magazine_content",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "magazine_image_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "magazine_title",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={"db_table": "magazine", "managed": False,},
        ),
        migrations.CreateModel(
            name="MagazineSong",
            fields=[
                (
                    "megazine_song_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
            ],
            options={"db_table": "magazine_song", "managed": False,},
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                ("member_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "member_email",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("member_high_pitch", models.IntegerField()),
                (
                    "member_nickname",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "member_profile_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("member_role", models.IntegerField()),
            ],
            options={"db_table": "member", "managed": False,},
        ),
        migrations.CreateModel(
            name="MemberTag",
            fields=[
                (
                    "member_tag_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
            ],
            options={"db_table": "member_tag", "managed": False,},
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                ("playlist_id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={"db_table": "playlist", "managed": False,},
        ),
        migrations.CreateModel(
            name="RefreshToken",
            fields=[
                (
                    "refresh_token_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={"db_table": "refresh_token", "managed": False,},
        ),
        migrations.CreateModel(
            name="Shorts",
            fields=[
                ("shorts_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "shorts_audio_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "shorts_comment",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("shorts_create_time", models.DateTimeField(blank=True, null=True)),
            ],
            options={"db_table": "shorts", "managed": False,},
        ),
        migrations.CreateModel(
            name="ShortsLike",
            fields=[
                (
                    "shorts_like_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
            ],
            options={"db_table": "shorts_like", "managed": False,},
        ),
        migrations.CreateModel(
            name="Song",
            fields=[
                ("song_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("song_genre", models.CharField(blank=True, max_length=50, null=True)),
                ("song_high_pitch", models.IntegerField()),
                (
                    "song_image_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("song_ky", models.CharField(blank=True, max_length=10, null=True)),
                ("song_num", models.IntegerField()),
                ("song_singer", models.CharField(blank=True, max_length=50, null=True)),
                ("song_tag", models.CharField(blank=True, max_length=500, null=True)),
                ("song_title", models.CharField(blank=True, max_length=100, null=True)),
                ("song_tj", models.CharField(blank=True, max_length=10, null=True)),
                ("song_like_count", models.IntegerField()),
                ("song_eval_count", models.IntegerField()),
                (
                    "song_lyrics",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("song_level", models.IntegerField()),
                ("song_album", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={"db_table": "song", "managed": False,},
        ),
        migrations.CreateModel(
            name="SongLevel",
            fields=[
                (
                    "song_level_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("song_level", models.IntegerField(blank=True, null=True)),
            ],
            options={"db_table": "song_level", "managed": False,},
        ),
        migrations.CreateModel(
            name="SongLike",
            fields=[
                (
                    "song_like_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
            ],
            options={"db_table": "song_like", "managed": False,},
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("tag_name", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={"db_table": "tag", "managed": False,},
        ),
    ]
